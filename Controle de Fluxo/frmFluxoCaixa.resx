<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_Calcular.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAADsNAAA7DQFhD4DuAAACr0lE
        QVRYR8WXS48NQRTH2zMsbRis2I1HgvFckUgYVojEh7AiPoOE1Qzi8QnMwgzfAPHYk5jxmM0IG2w8gh2/
        X+u66Xvd7qnqvpd/8kvq1q3qU119zqlTWaSWwRY4D/fgFXyHXwW27fM/x4yCc1rLhxyAW/AWvsEcTMMk
        XCi4AjPwEhzjWOfsg8YL2QCX4RO8Bw2Ow1pYDr2ybx0cBcc65yNcghFI0h54BF/gKrj9SyFWjnXONfgK
        D2AHROkIvAG38wSsgKZy7inQP/x0h6BWe+E1PINddgxIY+AzX0DlczeC2+5KB2k8yGf67Pugf3XJb6bD
        fQa3fVg6CdrQMbt8ylDTY3W4fh5epc2w6U8zSj77OnyA/XYoV2LMvoOtdkRKBzP27xTtWG0Dbfmy+S4Y
        Lgsw4Y8ErYbHBbZjtQRugDa1nZ0DY9Ukk6KmC1DHwBxz1h93YRbMYilqswBtafO2P0wS5vbUnN1mAdrS
        prazn+BhUqeVoJHAKlgDTwts21ce45w63QRt58epJ1qVDDW9/QmENxYNG9Niu/yfY31D51ZJR9T2ogsw
        zg211AU4py5HdBbwA/7XJ9B27ghucUoGVBoJb2w7Rdoy+nIntOEhkVo0tFmAtjzu8zC0hvvXieg4aDNP
        RCEVW0alqOkCTMV+/04qbnMYGWqph9F26DqMlEejR+Swj2MX6ttry4q5I1diQeIBcdqOIekMaOMidN4+
        aD1Yveqdu+0YsEK9aUmmrb4Kddugi1LL/OdQW5QGHQZ3wSRhDZfiYL1yrts+Dx6/ByFK4WJirJqzjY6/
        vlmNHGvpZXR5VXsIOyFJvVczF2IlYzHRL1Ls8z+TjJ7uHOfqcJXffDFZOBguXrF6L6cuqIwpvXw5dY6O
        1/hyWpYPMWuZOqdA/+h3Pfc/x0Rez7PsNz4Zu+4Fv36vAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="btn_Limpar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAOw3AADsNwEH5WQiAAAAB3RJ
        TUUH5AkLBy8WeJeN/QAAAV9JREFUWEft1b0uBUEYxvFFIRpfhUh8VDoXoFK4BKFyDRoFhfroNEoNahGJ
        SxCNKEU0GoJCIxQqEf5PYpM3k8nZd8bu0eyT/JLN7pln30wme4rMTOMQH7+OMIOepA+7+A7soR+NZxK3
        CAfQPT1rPLN4QDiA7ulZ42kHaAdoB2gH+PcBRnGCR+iloutT6FlPMgz9++lfUXQ9gsYyBL1EWyz25XYI
        +1xraskCznCPcsur6Ldas4g/ZQpXCA+c1zXmkJ01fCFW7rWB7GziCbFt9nhGB9kZQ+zAeWmtOrIyiFhp
        DnUlZwl3iG1tCnWoKznriB2qHFtIzj5iZTkOkBR9Vi9hS97wGtzzUlfSp3oeLygL3rGCZWgQW+6hLnW6
        s4pPlAU6TOWJ1rUtD8V2Sl3qdGcbtsA7QLed2oErAziGXewdoNvv1KnuykzgBnZxHQOoU92VGcc57OI6
        BriAuk2K4gdmaUXLtCRPEQAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="btn_Sair.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAAsSAAALEgHS3X78AAAC/ElE
        QVRYR73Xu69MURTH8SGhEB1RqrzfhBDR8z8oNIhC6DwShUpBoaKm9EgUniEhIl4JGioqEYKWhnj9Pjdz
        JjPnnjPnzNx7/ZJvZmbP3mutsx9rr9NpqdlhSTgYLofX4Vv428V3bf7TR19jpixGNoaz4V34FTj8Gb6G
        91181+Y/ffQ1Zl2YFcbSwnAyfAoMfw6XwqGwM6wKi7us7rb570oQkDEfwonA1kgS+Z3wOwjgVFgb5oQm
        zQ0bwukgaDbYYrOVNoVXwRPcCpvDOOtpzNbABltssj1UotTROp4Li8JUxQZbbLK9JlTKOt0OojVgfpgu
        scUm2zfCgjAgO9WG0+FmmI4nL4vNu4GP4xr6ZW0+Bhtui4YZ0rbAB1+Od0/OrMjs9irNCweCk9AkJ2Bv
        MKYsM30m8OVzQkuDxOHIrNdQIc5/hEfB+a+TAJ8FffdoqBAfX8LbIGNOpM4/QZKpO+d2LucirwuC86dB
        nwdhZagSH1cDn/s1cGzQYT+GiNO6IPqd3w/LwzAdDfpe8MMlIo/v8qNB5SBWBGl4FOfEF598d74HuZuh
        NuoPwnq/6H5v65z44pPvicFuNJdKW1nf58FYPAzLQlvxxaexYwVgU74MRQBPQt2mq9JAAIoJ01Gbo0vq
        33Ce/HH3e3ljDhNffPI90iYs73bT7sn7N2abIAY2YdtjOOyolU9HUxADx7BIRCoZxUSVZC87vsp5oXIQ
        dUvKx7XA5z4N0qG0aE0GLog+ye2mTIYbdtSKIKTi3RoqxAdfvVRMxWWkjKoqIl0scnub9bVUnDddRnz1
        ZIoVkC4kV+ZMaUdwEfE1qUZUvYpMDTdTBcm9wMcxDWX9r5LsephUkhXqL0rPh+mYCTbYaixKC/WX5aZM
        aT1uWb49FNPOZmNZXshtpXotXkzsXLMzyouJMTa1885W29u2J+ukelVAegLGVDJHQt2rmf8kGefcGLvd
        hqtd8yaZxuJpRn05dc7lhHGWb5IYkbXUcBfDm1B+Pdcmt+vT8vW80/kHGXL3b65VdvoAAAAASUVORK5C
        YII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAH8AAADjAAAA/gAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD+AAAA4wAAAH8AAAAEAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACfAAAA5wAAAGYAAAA8AAAAOwAAADsAAAA7AAAAOwAA
        ADsAAAA7AAAAOwAAADsAAAA7AAAAOwAAADsAAAA7AAAAOwAAADsAAAA7AAAAOwAAADwAAABmAAAA5wAA
        AJ8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKQAAAP4AAAA0AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAA0AAAA/gAAACkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABbAAAA4gAAAAAAAAAAAAAAAQAA
        ACIAAAAkAAAABwAAAAAAAAAAAAAAAAAAAAMAAAAjAAAAJAAAAAMAAAAAAAAAAAAAAAAAAAAHAAAAJAAA
        ACIAAAABAAAAAAAAAAAAAADiAAAAWwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF8AAADaAAAAAAAA
        AAAAAAB7AAAA/wAAAP8AAAC4AAAAAAAAAAAAAAAAAAAAmQAAAP8AAAD/AAAAmQAAAAAAAAAAAAAAAAAA
        ALgAAAD/AAAA/wAAAHsAAAAAAAAAAAAAANoAAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXwAA
        ANoAAAAAAAAAAAAAAJgAAAD/AAAA/wAAANUAAAAAAAAAAAAAAAAAAAC2AAAA/wAAAP8AAAC2AAAAAAAA
        AAAAAAAAAAAA1QAAAP8AAAD/AAAAmAAAAAAAAAAAAAAA2gAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAABfAAAA2gAAAAAAAAAAAAAAiAAAAP8AAAD/AAAAxQAAAAAAAAAAAAAAAAAAAKYAAAD/AAAA/wAA
        AKcAAAAAAAAAAAAAAAAAAADVAAAA/wAAAP8AAACYAAAAAAAAAAAAAADaAAAAYAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAF8AAADaAAAAAAAAAAAAAAAJAAAARgAAAEgAAAAYAAAAAAAAAAAAAAAAAAAAEAAA
        AEgAAABIAAAAEAAAAAAAAAAAAAAAAAAAANUAAAD/AAAA/wAAAJgAAAAAAAAAAAAAANoAAABgAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAXwAAANoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1QAAAP8AAAD/AAAAmAAAAAAAAAAAAAAA2gAA
        AGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABfAAAA2gAAAAAAAAAAAAAAAAAAABYAAAAZAAAAAwAA
        AAAAAAAAAAAAAAAAAAEAAAAYAAAAGAAAAAEAAAAAAAAAAAAAAAAAAADVAAAA/wAAAP8AAACYAAAAAAAA
        AAAAAADaAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF8AAADaAAAAAAAAAAAAAAB1AAAA/wAA
        AP8AAACyAAAAAAAAAAAAAAAAAAAAkwAAAP8AAAD/AAAAlAAAAAAAAAAAAAAAAAAAANUAAAD/AAAA/wAA
        AJgAAAAAAAAAAAAAANoAAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXwAAANoAAAAAAAAAAAAA
        AJgAAAD/AAAA/wAAANUAAAAAAAAAAAAAAAAAAAC2AAAA/wAAAP8AAAC2AAAAAAAAAAAAAAAAAAAA1QAA
        AP8AAAD/AAAAmAAAAAAAAAAAAAAA2gAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABfAAAA2gAA
        AAAAAAAAAAAAiwAAAP8AAAD/AAAAyAAAAAAAAAAAAAAAAAAAAKkAAAD/AAAA/wAAAKoAAAAAAAAAAAAA
        AAAAAADIAAAA/wAAAP8AAACLAAAAAAAAAAAAAADaAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AF8AAADaAAAAAAAAAAAAAAANAAAAUQAAAFQAAAAfAAAAAAAAAAAAAAAAAAAAFQAAAFQAAABUAAAAFQAA
        AAAAAAAAAAAAAAAAAB8AAABUAAAAUgAAAA0AAAAAAAAAAAAAANoAAABgAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAXwAAANoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2gAAAGAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABfAAAA2gAAAAAAAAAAAAAAAAAAAAsAAAANAAAAAQAAAAAAAAAAAAAAAAAA
        AAAAAAAMAAAADAAAAAAAAAAAAAAAAAAAAAAAAAABAAAADQAAAAsAAAAAAAAAAAAAAAAAAADaAAAAYAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF8AAADaAAAAAAAAAAAAAABuAAAA/gAAAP8AAACrAAAAAAAA
        AAAAAAAAAAAAjAAAAP8AAAD/AAAAjAAAAAAAAAAAAAAAAAAAAKsAAAD/AAAA/gAAAG4AAAAAAAAAAAAA
        ANoAAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXwAAANoAAAAAAAAAAAAAAJgAAAD/AAAA/wAA
        ANUAAAAAAAAAAAAAAAAAAAC2AAAA/wAAAP8AAAC2AAAAAAAAAAAAAAAAAAAA1QAAAP8AAAD/AAAAmAAA
        AAAAAAAAAAAA2gAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABfAAAA2gAAAAAAAAAAAAAAjgAA
        AP8AAAD/AAAAywAAAAAAAAAAAAAAAAAAAKwAAAD/AAAA/wAAAKwAAAAAAAAAAAAAAAAAAADLAAAA/wAA
        AP8AAACOAAAAAAAAAAAAAADaAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF8AAADaAAAAAAAA
        AAAAAAARAAAAXQAAAGAAAAAmAAAAAAAAAAAAAAAAAAAAGwAAAF8AAABfAAAAGwAAAAAAAAAAAAAAAAAA
        ACYAAABgAAAAXQAAABEAAAAAAAAAAAAAANoAAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXwAA
        ANoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2gAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAABfAAAA2gAAAAAAAAANAAAAQQAAAEEAAABBAAAAQQAAAEEAAABBAAAAQQAAAEEAAABBAAAAQQAA
        AEEAAABBAAAAQQAAAEEAAABBAAAAQQAAAEEAAABBAAAADgAAAAAAAADaAAAAYAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAF8AAADaAAAAAAAAADYAAAD/AAAA+QAAAPkAAAD5AAAA+QAAAPkAAAD5AAAA+QAA
        APkAAAD5AAAA+QAAAPkAAAD5AAAA+QAAAPkAAAD5AAAA+QAAAP8AAAA2AAAAAAAAANoAAABgAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAXwAAANoAAAAAAAAANgAAAP8AAAAFAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAA/wAAADYAAAAAAAAA2gAA
        AGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABfAAAA2gAAAAAAAAA2AAAA/wAAAAUAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAD/AAAANgAA
        AAAAAADaAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF8AAADaAAAAAAAAADYAAAD/AAAABQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAA
        AP8AAAA2AAAAAAAAANoAAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXwAAANoAAAAAAAAANgAA
        AP8AAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAEAAAA/wAAADYAAAAAAAAA2gAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABfAAAA2gAA
        AAAAAAA2AAAA/wAAAO8AAADuAAAA7gAAAO4AAADuAAAA7gAAAO4AAADuAAAA7gAAAO4AAADuAAAA7gAA
        AO4AAADuAAAA7gAAAO8AAAD/AAAANgAAAAAAAADaAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AFsAAADiAAAAAAAAABAAAABMAAAATAAAAEwAAABMAAAATAAAAEwAAABMAAAATAAAAEwAAABMAAAATAAA
        AEwAAABMAAAATAAAAEwAAABMAAAATAAAAEwAAAAQAAAAAAAAAOIAAABbAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAKAAAAP4AAAA0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0AAAA/gAAACkAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAnwAAAOcAAABnAAAAPQAAADsAAAA7AAAAOwAAADsAAAA7AAAAOwAA
        ADsAAAA7AAAAOwAAADsAAAA7AAAAOwAAADsAAAA7AAAAOwAAADsAAAA9AAAAZwAAAOgAAACfAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAfgAAAOMAAAD+AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP4AAADjAAAAfgAA
        AAQAAAAAAAAAAAAAAAAAAAAA8AAAD/AAAA/j///H5hw4Z+YcOGfmHDhn5hw4Z+YcOGfn//hn5xw4Z+Yc
        OGfmHDhn5hw4Z+YcOGfn///n5x545+YcOGfmHDhn5hw4Z+YcOGfn///n5AAAJ+QAACfkf/4n5H/+J+R/
        /ifkf/4n5AAAJ+QAACfj///H8AAAD/AAAA8=
</value>
  </data>
</root>